* Intro to Python Module

** Assignment 0001

   - Step 1: Watch this resource video for guidance if needed:
     - https://www.loom.com/share/e56362e9722d4099a3ab67e7d4d06443?sid=7286e84e-ee33-420d-8e95-2e7f9098911d

   - Step 2: Complete the following challenges on the Codewars platform. Your solutions must pass all test cases on Codewars before proceeding.

      - Even or odd - https://www.codewars.com/kata/53da3dbb4a5168369a0000fe    
      - Convert a Number to a String - https://www.codewars.com/kata/5265326f5fda8eb1160004c8 

      - Choose ONE of the following: 
         - Remove String Spaces - https://www.codewars.com/kata/57eae20f5500ad98e50002c5 
         - Vowel Count (if you want to try a challenge with loops!) - https://www.codewars.com/kata/54ff3102c1bad923760001f3

   - Step 3: Once your solutions pass on Codewars, follow these steps:
       - Open and create a new .py file.
       - Copy and paste all three solutions into the file, separated by comments that clearly identify each solution.

         ##################################################
         ###   Example:                                 ###
         ###   # Solution: Absolute Value of a Number   ###
         ###   def absolute_value(num):                 ###
         ###       return num if num >= 0 else -num     ###
         ##################################################

      - Create a GitHub repo to host your assignment:   
      - Add your .py file to the repository.    
      - Use Git commands (add, commit, and push) to upload your work to GitHub.    
      - Submit the here in Google Classroom.

** Project

*** Overview

In this project, you will build a functional To-Do List Application using Python from scratch. This assignment will help you strengthen your understanding of Python concepts such as syntax, data types, control structures, functions, and error handling, all while creating a practical, interactive command-line application.

   - In VS Code, create a .py file and complete the following requirements:

**** User Interface (UI) and Storage Method

   - Build a simple Command Line Interface (CLI) that welcomes users and displays a menu with options to add, view, delete tasks, or quit the application.
      - The tasks should be stored in a Python list

   - Core Features
      - Add tasks
      - View tasks
      - Delete tasks
      - Quit the application

   - User Interaction
      - Use input() to capture user selections and ensure proper input validation to handle invalid choices.

**** Error Handling
   - Implement error handling using try, except, else, and finally blocks to catch errors
      - Alert the user if they provide invalid input
      - Alert the user if there are no tasks to view
      - Alert the user if they try to delete a task that doesn't exist
      - Alert the user if they select an option on the main menu that doesn't exist

**** Code Organization
   - Organize your code into functions to improve clarity and maintainability. 
   - Use descriptive function names and add comments/docstrings where necessary.
   - Testing and Debugging
   - Thoroughly test your application, considering edge cases such as empty lists and invalid input.

*** Submission Guidelines:
   - Ensure the code is ready to run and that all functionality, such as loops, conditionals, and functions, works as expected when executed. The goal is to have fully tested and functional code.
   - Create a GitHub repository to host your project. Add, commit, and push your code to it
   - Create a README.md on the repository that gives information about your project and how to run/use it
   - Submit the repository link in Google Classroom.
